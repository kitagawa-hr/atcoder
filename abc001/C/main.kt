import java.io.BufferedInputStream
import java.util.StringTokenizer



// Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
fun main(args: Array<String>) {
    fun StringArray(size: Int, init: (Int) -> String = { "\u0000" }): Array<String> {
        return Array<String>(size, init)
    }
    class Scanner() {
        private val reader = BufferedInputStream(System.`in`).bufferedReader()
        private val tokens = StringTokenizer(reader.use { it.readText() })
        fun next() = tokens.nextToken()
    }
    val sc = Scanner()
    val Deg = sc.next().toInt()
    val Dis = sc.next().toInt()
    solve(Deg, Dis)
}

fun solve(Deg: Int, Dis:Int){
    val d = Math.round(Dis.toFloat() / 6.0)
    val W = when{
        (d <= 2) -> 0
        (d <= 15) -> 1
        (d <= 33) -> 2
        (d <= 54) -> 3
        (d <= 79) -> 4
        (d <= 107) -> 5
        (d <= 138) -> 6
        (d <= 171) -> 7
        (d <= 207) -> 8
        (d <= 244) -> 9
        (d <= 284) -> 10
        (d <= 326) -> 11
        else -> 12
    }
    val Dir = when{
        (W == 0) -> "C"
        ((112.5 <= Deg) and(Deg < 337.5)) -> "NNE"
        (Deg < 562.5) -> "NE"
        (Deg < 787.5) -> "ENE"
        (Deg < 1012.5) ->  "E"
        (Deg < 1237.5) ->"ESE"
        (Deg < 1462.5) -> "SE"
        (Deg < 1687.5) -> "SSE"
        (Deg < 1912.5) ->  "S"
        (Deg < 2137.5) ->"SSW"
        (Deg < 2362.5) -> "SW"
        (Deg < 2587.5) -> "WSW"
        (Deg < 2812.5) -> "W"
        (Deg < 3037.5) -> "WNW"
        (Deg < 3262.5) -> "NW"
        (Deg < 3487.5) -> "NNW"
        else -> "N"
    }
    println("$Dir $W")
}


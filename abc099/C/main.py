#!/usr/bin/env python3
import sys

from functools import lru_cache


def solve(N: int):
    print(dp(N))
    return


@lru_cache(None)
def dp(n):
    coins = [1, 6, 9, 36, 81, 216, 729, 1296, 6561, 7776, 46656, 59049]
    if n in coins:
        return 1
    if n == 0:
        return 0
    if n < 0:
        return 1000000
    cs = sorted([c for c in coins if c < n])
    return min([1 + dp(n - c) for c in cs[len(cs) // 2 :]])


# Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word

    tokens = iterate_tokens()
    N = int(next(tokens))  # type: int
    solve(N)


if __name__ == "__main__":
    main()

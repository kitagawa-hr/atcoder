import java.io.BufferedInputStream



// Generated by 1.1.4 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
fun main(args: Array<String>) {
    fun StringArray(size: Int, init: (Int) -> String = { "\u0000" }): Array<String> {
        return Array<String>(size, init)
    }
    fun iterateTokens(): Iterator<String> {
        val reader = BufferedInputStream(System.`in`).bufferedReader()
        val iterator = reader.lineSequence()
                .map { it.split(" ") }
                .reduce { left, right -> left + right }
                .iterator()
        return iterator
    }
    val tokens = iterateTokens()
    val N = tokens.next().toLong()
    val V = LongArray(N.toInt())
    for(i in 0 until N.toInt()){
        V[i] = tokens.next().toLong()
    }
    val C = LongArray(N.toInt())
    for(i in 0 until N.toInt()){
        C[i] = tokens.next().toLong()
    }
    solve(N, V, C)
}

fun solve(N: Long, V: LongArray, C: LongArray){
    var ans = 0L
    for ( i in 0 until N.toInt()){
        if (V[i] - C[i] > 0){
        ans += V[i] - C[i]
        }
    }
    println(ans)
    return
}


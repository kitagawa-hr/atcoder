import java.io.BufferedInputStream
import java.io.InputStream
import java.util.StringTokenizer

fun solve(S: String) {
    val year = S.slice(0..3)!!.toInt()
    val month = S.slice(5..6)!!.toInt()
    val day = S.slice(8..9)!!.toInt()
    val date = year * 10000 + month * 100 + day
    if (date <= 20190430) { println("Heisei") } else { println("TBD") }
}

// Generated by 1.1.4 https://github".com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
fun main(args: Array<String>) {
    fun StringArray(size: Int, init: (Int) -> String = { "\u0000" }): Array<String> {
        return Array<String>(size, init)
    }
    class Scanner(stream: InputStream) {
        private val reader = BufferedInputStream(stream).bufferedReader()
        private var st: StringTokenizer? = null
        fun next(): String {
            while (!(st?.hasMoreTokens() ?: false)) st = StringTokenizer(reader.readLine())
            return st!!.nextToken()
        }
    }
    val sc = Scanner(System.`in`)
    val S = sc.next()
    solve(S)
}
